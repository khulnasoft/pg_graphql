begin;
    create table account(
        id int primary key
    );
    comment on table account is e'@graphql({"totalCount": {"enabled": true}})';
    insert into public.account(id)
    select * from generate_series(1,5);
    select jsonb_pretty(
        graphql.resolve($$
            {
              accountCollection(first: 2, after: "WzNd") {
                totalCount
                edges {
                  node {
                    id
                  }
                }
              }
            }
        $$)
    );
          jsonb_pretty           
---------------------------------
 {                              +
     "data": {                  +
         "accountCollection": { +
             "edges": [         +
                 {              +
                     "node": {  +
                         "id": 4+
                     }          +
                 },             +
                 {              +
                     "node": {  +
                         "id": 5+
                     }          +
                 }              +
             ],                 +
             "totalCount": 5    +
         }                      +
     }                          +
 }
(1 row)

    -- First with after variable
    select jsonb_pretty(
        graphql.resolve($$
            query ABC($afterCursor: Cursor){
              accountCollection(first: 2, after: $afterCursor) {
                edges {
                  node {
                    id
                  }
                }
              }
            }
        $$,
        variables := '{"afterCursor": "WzNd"}'
    ));
          jsonb_pretty           
---------------------------------
 {                              +
     "data": {                  +
         "accountCollection": { +
             "edges": [         +
                 {              +
                     "node": {  +
                         "id": 4+
                     }          +
                 },             +
                 {              +
                     "node": {  +
                         "id": 5+
                     }          +
                 }              +
             ]                  +
         }                      +
     }                          +
 }
(1 row)

    -- First without an after clause
    select jsonb_pretty(
        graphql.resolve($$
            {
              accountCollection(first: 2) {
                edges {
                  node {
                    id
                  }
                }
              }
            }
        $$)
    );
          jsonb_pretty           
---------------------------------
 {                              +
     "data": {                  +
         "accountCollection": { +
             "edges": [         +
                 {              +
                     "node": {  +
                         "id": 1+
                     }          +
                 },             +
                 {              +
                     "node": {  +
                         "id": 2+
                     }          +
                 }              +
             ]                  +
         }                      +
     }                          +
 }
(1 row)

    -- First with after = null same as omitting after
    select jsonb_pretty(
        graphql.resolve($$
            {
              accountCollection(first: 2, after: null) {
                edges {
                  node {
                    id
                  }
                }
              }
            }
        $$)
    );
          jsonb_pretty           
---------------------------------
 {                              +
     "data": {                  +
         "accountCollection": { +
             "edges": [         +
                 {              +
                     "node": {  +
                         "id": 1+
                     }          +
                 },             +
                 {              +
                     "node": {  +
                         "id": 2+
                     }          +
                 }              +
             ]                  +
         }                      +
     }                          +
 }
(1 row)

    -- First with after = null as variable same as omitting after
    select jsonb_pretty(
        graphql.resolve($$
            query ABC($afterCursor: Cursor){
              accountCollection(first: 2, after: $afterCursor) {
                edges {
                  node {
                    id
                  }
                }
              }
            }
        $$,
        variables := '{"afterCursor": null}'
    ));
          jsonb_pretty           
---------------------------------
 {                              +
     "data": {                  +
         "accountCollection": { +
             "edges": [         +
                 {              +
                     "node": {  +
                         "id": 1+
                     }          +
                 },             +
                 {              +
                     "node": {  +
                         "id": 2+
                     }          +
                 }              +
             ]                  +
         }                      +
     }                          +
 }
(1 row)

    -- last before
    select jsonb_pretty(
        graphql.resolve($$
            {
              accountCollection(last: 2, before: "WzNd") {
                edges {
                  node {
                    id
                  }
                }
              }
            }
        $$)
    );
          jsonb_pretty           
---------------------------------
 {                              +
     "data": {                  +
         "accountCollection": { +
             "edges": [         +
                 {              +
                     "node": {  +
                         "id": 1+
                     }          +
                 },             +
                 {              +
                     "node": {  +
                         "id": 2+
                     }          +
                 }              +
             ]                  +
         }                      +
     }                          +
 }
(1 row)

    -- Last with after variable
    select jsonb_pretty(
        graphql.resolve($$
            query ABC($afterCursor: Cursor){
              accountCollection(last: 2, before: $afterCursor) {
                edges {
                  node {
                    id
                  }
                }
              }
            }
        $$,
        variables := '{"afterCursor": "WzNd"}'
    ));
          jsonb_pretty           
---------------------------------
 {                              +
     "data": {                  +
         "accountCollection": { +
             "edges": [         +
                 {              +
                     "node": {  +
                         "id": 1+
                     }          +
                 },             +
                 {              +
                     "node": {  +
                         "id": 2+
                     }          +
                 }              +
             ]                  +
         }                      +
     }                          +
 }
(1 row)

    -- last without an after clause
    select jsonb_pretty(
        graphql.resolve($$
            {
              accountCollection(last: 2) {
                edges {
                  node {
                    id
                  }
                }
              }
            }
        $$)
    );
          jsonb_pretty           
---------------------------------
 {                              +
     "data": {                  +
         "accountCollection": { +
             "edges": [         +
                 {              +
                     "node": {  +
                         "id": 4+
                     }          +
                 },             +
                 {              +
                     "node": {  +
                         "id": 5+
                     }          +
                 }              +
             ]                  +
         }                      +
     }                          +
 }
(1 row)

    -- last with before = null same as omitting after
    select jsonb_pretty(
        graphql.resolve($$
            {
              accountCollection(last: 2, before: null) {
                edges {
                  node {
                    id
                  }
                }
              }
            }
        $$)
    );
          jsonb_pretty           
---------------------------------
 {                              +
     "data": {                  +
         "accountCollection": { +
             "edges": [         +
                 {              +
                     "node": {  +
                         "id": 4+
                     }          +
                 },             +
                 {              +
                     "node": {  +
                         "id": 5+
                     }          +
                 }              +
             ]                  +
         }                      +
     }                          +
 }
(1 row)

    -- First with before variable
    select jsonb_pretty(
        graphql.resolve($$
            query ABC($beforeCursor: Cursor){
              accountCollection(last: 2, before: $beforeCursor) {
                edges {
                  node {
                    id
                  }
                }
              }
            }
        $$,
        variables := '{"beforeCursor": "WzNd"}'
    ));
          jsonb_pretty           
---------------------------------
 {                              +
     "data": {                  +
         "accountCollection": { +
             "edges": [         +
                 {              +
                     "node": {  +
                         "id": 1+
                     }          +
                 },             +
                 {              +
                     "node": {  +
                         "id": 2+
                     }          +
                 }              +
             ]                  +
         }                      +
     }                          +
 }
(1 row)

    -- issue #161: confirm variables for first/last before/after may be present so long as
    -- only correct pairs are passed as variables
    select jsonb_pretty(
        graphql.resolve($$
            query ABC($beforeCursor: Cursor, $afterCursor: Cursor, $lastN: Int, $firstN: Int){
              accountCollection(last: $lastN, before: $beforeCursor, first: $firstN, after: $afterCursor) {
                edges {
                  node {
                    id
                  }
                }
              }
            }
        $$,
        variables := '{"beforeCursor": "WzNd", "afterCursor": null, "lastN": 2, "beforeN": null}'
    ));
          jsonb_pretty           
---------------------------------
 {                              +
     "data": {                  +
         "accountCollection": { +
             "edges": [         +
                 {              +
                     "node": {  +
                         "id": 1+
                     }          +
                 },             +
                 {              +
                     "node": {  +
                         "id": 2+
                     }          +
                 }              +
             ]                  +
         }                      +
     }                          +
 }
(1 row)

    -- Last without a before clause
    select jsonb_pretty(
        graphql.resolve($$
            {
              accountCollection(last: 2) {
                edges {
                  node {
                    id
                  }
                }
              }
            }
        $$)
    );
          jsonb_pretty           
---------------------------------
 {                              +
     "data": {                  +
         "accountCollection": { +
             "edges": [         +
                 {              +
                     "node": {  +
                         "id": 4+
                     }          +
                 },             +
                 {              +
                     "node": {  +
                         "id": 5+
                     }          +
                 }              +
             ]                  +
         }                      +
     }                          +
 }
(1 row)

    -- Test interactions with orderBy
    create table blog(
        id int primary key,
        reversed int,
        title text
    );
    insert into public.blog(id, reversed, title)
    select
        x.id,
        (20 - id) % 5,
        case id % 3
            when 1 then 'a'
            when 2 then 'b'
            when 3 then null
        end
    from generate_series(1,20) x(id);
    select * from public.blog;
 id | reversed | title 
----+----------+-------
  1 |        4 | a
  2 |        3 | b
  3 |        2 | 
  4 |        1 | a
  5 |        0 | b
  6 |        4 | 
  7 |        3 | a
  8 |        2 | b
  9 |        1 | 
 10 |        0 | a
 11 |        4 | b
 12 |        3 | 
 13 |        2 | a
 14 |        1 | b
 15 |        0 | 
 16 |        4 | a
 17 |        3 | b
 18 |        2 | 
 19 |        1 | a
 20 |        0 | b
(20 rows)

    -- First after w/ complex order
    select jsonb_pretty(
        graphql.resolve($$
            query ABC($afterCursor: Cursor){
              blogCollection(
                first: 5
                after: $afterCursor
                orderBy: [{reversed: AscNullsLast}, {title: AscNullsFirst}]
              ) {
                edges {
                  node {
                    id
                    reversed
                    title
                  }
                }
              }
            }
        $$,
        jsonb_build_object('afterCursor', graphql.encode('[3, "a"]'::jsonb))
        )
    );
              jsonb_pretty              
----------------------------------------
 {                                     +
     "data": {                         +
         "blogCollection": {           +
             "edges": [                +
                 {                     +
                     "node": {         +
                         "id": 2,      +
                         "title": "b", +
                         "reversed": 3 +
                     }                 +
                 },                    +
                 {                     +
                     "node": {         +
                         "id": 17,     +
                         "title": "b", +
                         "reversed": 3 +
                     }                 +
                 },                    +
                 {                     +
                     "node": {         +
                         "id": 6,      +
                         "title": null,+
                         "reversed": 4 +
                     }                 +
                 },                    +
                 {                     +
                     "node": {         +
                         "id": 1,      +
                         "title": "a", +
                         "reversed": 4 +
                     }                 +
                 },                    +
                 {                     +
                     "node": {         +
                         "id": 16,     +
                         "title": "a", +
                         "reversed": 4 +
                     }                 +
                 }                     +
             ]                         +
         }                             +
     }                                 +
 }
(1 row)

    -- Last before w/ complex order
    select jsonb_pretty(
        graphql.resolve($$
            query ABC($beforeCursor: Cursor){
              blogCollection(
                last: 5
                before: $beforeCursor
                orderBy: [{reversed: AscNullsLast}, {title: AscNullsFirst}]
              ) {
                edges {
                  node {
                    id
                    reversed
                    title
                  }
                }
              }
            }
        $$,
        jsonb_build_object('beforeCursor', graphql.encode('[3, "a"]'::jsonb))
        )
    );
              jsonb_pretty              
----------------------------------------
 {                                     +
     "data": {                         +
         "blogCollection": {           +
             "edges": [                +
                 {                     +
                     "node": {         +
                         "id": 14,     +
                         "title": "b", +
                         "reversed": 1 +
                     }                 +
                 },                    +
                 {                     +
                     "node": {         +
                         "id": 3,      +
                         "title": null,+
                         "reversed": 2 +
                     }                 +
                 },                    +
                 {                     +
                     "node": {         +
                         "id": 18,     +
                         "title": null,+
                         "reversed": 2 +
                     }                 +
                 },                    +
                 {                     +
                     "node": {         +
                         "id": 13,     +
                         "title": "a", +
                         "reversed": 2 +
                     }                 +
                 },                    +
                 {                     +
                     "node": {         +
                         "id": 8,      +
                         "title": "b", +
                         "reversed": 2 +
                     }                 +
                 }                     +
             ]                         +
         }                             +
     }                                 +
 }
(1 row)

    /*
    ERROR STATES
    */
    -- first + last raises an error
    select jsonb_pretty(
        graphql.resolve($$
            {
              accountCollection(first: 2, last: 1) {
                totalCount
              }
            }
        $$)
    );
                                jsonb_pretty                                 
-----------------------------------------------------------------------------
 {                                                                          +
     "data": null,                                                          +
     "errors": [                                                            +
         {                                                                  +
             "message": "only one of \"first\" and \"last\" may be provided"+
         }                                                                  +
     ]                                                                      +
 }
(1 row)

    -- before + after raises an error
    select jsonb_pretty(
        graphql.resolve($$
            {
              accountCollection(before: "WzNd", after: "WzNd") {
                totalCount
              }
            }
        $$)
    );
                                 jsonb_pretty                                  
-------------------------------------------------------------------------------
 {                                                                            +
     "data": null,                                                            +
     "errors": [                                                              +
         {                                                                    +
             "message": "only one of \"before\" and \"after\" may be provided"+
         }                                                                    +
     ]                                                                        +
 }
(1 row)

    -- first + before raises an error
    select jsonb_pretty(
        graphql.resolve($$
            {
              accountCollection(first: 2, before: "WzNd") {
                totalCount
              }
            }
        $$)
    );
                            jsonb_pretty                            
--------------------------------------------------------------------
 {                                                                 +
     "data": null,                                                 +
     "errors": [                                                   +
         {                                                         +
             "message": "\"first\" may only be used with \"after\""+
         }                                                         +
     ]                                                             +
 }
(1 row)

    -- last + after raises an error
    select jsonb_pretty(
        graphql.resolve($$
            {
              accountCollection(last: 2, after: "WzNd") {
                totalCount
              }
            }
        $$)
    );
                            jsonb_pretty                            
--------------------------------------------------------------------
 {                                                                 +
     "data": null,                                                 +
     "errors": [                                                   +
         {                                                         +
             "message": "\"last\" may only be used with \"before\""+
         }                                                         +
     ]                                                             +
 }
(1 row)

rollback;
