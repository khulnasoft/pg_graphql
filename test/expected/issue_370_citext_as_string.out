begin;
    -- https://github.com/khulnasoft/pg_graphql/issues/370
    -- citext is common enough that we should handle treating it as a string
    create extension citext;
    create table account(
        id int primary key,
        email citext
    );
    insert into public.account(id, email)
    values (1, 'aBc'), (2, 'def');
    select jsonb_pretty(
        graphql.resolve($$
        {
          __type(name: "Account") {
            kind
            fields {
                name type { kind name ofType { name }  }
            }
          }
        }
        $$)
    );
                jsonb_pretty                 
---------------------------------------------
 {                                          +
     "data": {                              +
         "__type": {                        +
             "kind": "OBJECT",              +
             "fields": [                    +
                 {                          +
                     "name": "nodeId",      +
                     "type": {              +
                         "kind": "NON_NULL",+
                         "name": null,      +
                         "ofType": {        +
                             "name": "ID"   +
                         }                  +
                     }                      +
                 },                         +
                 {                          +
                     "name": "id",          +
                     "type": {              +
                         "kind": "NON_NULL",+
                         "name": null,      +
                         "ofType": {        +
                             "name": "Int"  +
                         }                  +
                     }                      +
                 },                         +
                 {                          +
                     "name": "email",       +
                     "type": {              +
                         "kind": "SCALAR",  +
                         "name": "String",  +
                         "ofType": null     +
                     }                      +
                 }                          +
             ]                              +
         }                                  +
     }                                      +
 }
(1 row)

    select jsonb_pretty(
        graphql.resolve($$
            {
              accountCollection( filter: {email: {in: ["abc"]}}) {
                edges {
                  node {
                    id
                    email
                  }
                }
              }
            }
        $$)
    );
              jsonb_pretty              
----------------------------------------
 {                                     +
     "data": {                         +
         "accountCollection": {        +
             "edges": [                +
                 {                     +
                     "node": {         +
                         "id": 1,      +
                         "email": "aBc"+
                     }                 +
                 }                     +
             ]                         +
         }                             +
     }                                 +
 }
(1 row)

rollback;
